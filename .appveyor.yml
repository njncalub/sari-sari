environment:
  
  matrix:
    - PYTHON: "C:/Python36"
      DJANGO_VERSION: "Django==2.0,<2.1"
  
  # python
  PYTHONIOENCODING: "utf-8"
  PYTHONWARNINGS: all
  
  # django
  DJANGO_SETTINGS_MODULE: config.settings.test
  REQUIREMENTS_FILE: "requirements/appveyor.txt"
  
  # postgres
  POSTGRES_PATH: "C:/Program Files/PostgreSQL/10"
  PGTESTDB: "testdb"
  PGUSER: "postgres"
  PGPASSWORD: "Password12!"
  PGDATA: "%POSTGRES_PATH%\\data"
  POSTGRES_USER: "sarisari_dev"
  POSTGRES_PASSWORD: "sarisari_password"
  POSTGRES_HOST: "127.0.0.1"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: sarisari_db
  POSTGRES_CONN: "tcp://%POSTGRES_HOST%:%POSTGRES_PORT%"
  DATABASE_URL: "postgres://%POSTGRES_USER%:%POSTGRES_PASSWORD%@%POSTGRES_HOST%:%POSTGRES_PORT%/%POSTGRES_DB%"

services:
  - postgresql101

matrix:
  fast_finish: true

build: off

init:
  - "ECHO %PYTHON%"
  - ps: "ls C:\\Python*"
  - "SET PATH=%POSTGRES_PATH%/bin;%PATH%"

install:
  # update pgpass.conf
  - SET PGPASS="%POSTGRES_HOST%:*:%PGTESTDB%:%POSTGRES_USER%:%POSTGRES_PASSWORD%"
  - echo %PGPASS% > %POSTGRES_PATH%\\pgpass.conf
  - echo %PGPASS% > pgpass.conf
  - echo %PGPASS% > %userprofile%\\pgpass.conf
  - SET PGPASSFILE=%POSTGRES_PATH%\\pgpass.conf
  
  - net start postgresql-x64-10
  
  # Setup database
  - psql -U %PGUSER% -c "CREATE USER %POSTGRES_USER% WITH PASSWORD '%POSTGRES_PASSWORD%';"
  - psql -U %PGUSER% -c "ALTER USER %POSTGRES_USER% CREATEDB;"
  - psql -U %PGUSER% -c "ALTER ROLE %POSTGRES_USER% SET client_encoding TO 'utf8';"
  - psql -U %PGUSER% -c "ALTER ROLE %POSTGRES_USER% SET default_transaction_isolation TO 'read committed';"
  - psql -U %PGUSER% -c "ALTER ROLE %POSTGRES_USER% SET timezone TO 'UTC';"
  - psql -U %PGUSER% -c "CREATE DATABASE %POSTGRES_DB%;"
  - psql -U %PGUSER% -c "GRANT ALL PRIVILEGES ON DATABASE %POSTGRES_DB% TO %POSTGRES_USER%;"
  
  # install pip
  - ps: (new-object net.webclient).DownloadFile('https://bootstrap.pypa.io/get-pip.py', 'C:/get-pip.py')
  - "%PYTHON%\\python.exe C:\\get-pip.py"
  - "%PYTHON%\\Scripts\\pip.exe install -r %REQUIREMENTS_FILE%"
  
  # migrate database
  - "%PYTHON%\\python.exe manage.py migrate"

before_test:
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\Scripts\\pip.exe --version"

test_script:
  # Make sure we are not in a directory where we might import a
  # different version of psycopg2
  - CD "C:\\projects\\sari-sari"
  
  # Print psycopg and libpq versions
  - "%PYTHON%\\python.exe -c \"import psycopg2; print(psycopg2.__version__)\""
  - "%PYTHON%\\python.exe -c \"import psycopg2; print(psycopg2.__libpq_version__)\""
  - "%PYTHON%\\python.exe -c \"import psycopg2; print(psycopg2.extensions.libpq_version())\""
  
  # Test
  - "%PYTHON%\\python.exe manage.py test"
  - "%PYTHON%\\python.exe -m coverage run manage.py test"
  - "%PYTHON%\\python.exe -m pytest"
